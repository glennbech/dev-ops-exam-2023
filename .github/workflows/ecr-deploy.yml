name: Publish Docker image

on:
  push:
    branches:
      - main
      - '*'

jobs:
  build_and_push_to_registry:
    name: Push Docker image to ECR
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set image tag
        run: echo "rev=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build . -t geralt

      - name: Push Docker image to ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 244530008913.dkr.ecr.eu-west-1.amazonaws.com
          docker tag geralt 244530008913.dkr.ecr.eu-west-1.amazonaws.com/2019-ecr-repo:$rev
          docker tag geralt 244530008913.dkr.ecr.eu-west-1.amazonaws.com/2019-ecr-repo:latest
          docker push 244530008913.dkr.ecr.eu-west-1.amazonaws.com/2019-ecr-repo:$rev
          docker push 244530008913.dkr.ecr.eu-west-1.amazonaws.com/2019-ecr-repo:latest
          
          
  terraform:
    name: "Terraform"
    needs: build_and_push_to_registry
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: eu-west-1
      IMAGE: 244530008913.dkr.ecr.eu-west-1.amazonaws.com/2019-ecr-repo:latest
      PREFIX: kandidat2019 
 #    TF_LOG: trace
    steps:
      - uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: ./infra
        id: init
        run: terraform init
      
      - name: Terraform Plan
        working-directory: ./infra
        id: plan
        run: terraform plan   -var="prefix=$PREFIX" -var="image=$IMAGE"  -no-color
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        working-directory: ./infra
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -var="prefix=$PREFIX" -var="image=$IMAGE"  -auto-approve

  build_only:
    name: Build Docker image only
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build . -t geralt






